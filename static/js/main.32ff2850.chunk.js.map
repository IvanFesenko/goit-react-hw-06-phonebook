{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","redux/selectors.js","components/Contacts/Contacts.js","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactList/DeleteButton.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","services/sortContactList.js","services/localStorage.js","redux/redusers.js","redux/store.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","contactsSelector","phoneBook","contacts","filterSelector","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","getFilter","getContacts","Contacts","children","actions","addContact","createAction","number","payload","id","uid","deleteContact","filterContacts","ContactForm","useForm","register","handleSubmit","errors","dispatch","useDispatch","onSubmit","className","s","form","htmlFor","formName","type","placeholder","ref","required","min","maxLength","formNumber","pattern","btn","DeleteButton","handler","onClick","ContactListItem","info","onDeleteHandler","item","wrap","phone","ContactList","useSelector","length","list","map","Filter","styles","container","input","value","onChange","e","target","App","sortContactList","sort","a","b","setToLocalStorage","data","window","localStorage","setItem","JSON","stringify","initState","parse","getItem","getFromLocalStorage","contactsReducer","createReducer","state","action","console","log","result","contact","filterReducer","reducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,uDAAuD,WAAa,yDAAyD,IAAM,2B,mBCApOD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,wB,mBCAhED,EAAOC,QAAU,CAAC,UAAY,yB,qJCCjBC,EAAmB,SAAC,GAAD,SAAGC,UAA0BC,UAChDC,EAAiB,SAAC,GAAD,SAAGF,UAA0BG,QAE9CC,EAAqBC,YAChC,CAACN,EAAkBG,IACnB,SAACD,EAAUE,GACT,OAAIA,EACKF,EAASE,QAAO,YACrB,OADmC,EAAXG,KACZC,cAAcC,SAASL,EAAOI,kBAGvCN,KAIEQ,EAAYJ,YAAeH,GAAgB,SAAAC,GACtD,OAAOA,KAGIO,EAAcL,YAAeN,GAAkB,SAAAE,GAC1D,OAAOA,KCbMU,MATf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,gCACE,0CACCA,M,uBCmBQC,EANC,CACdC,WAfiBC,YAAa,wBAAwB,SAACT,EAAMU,GAAP,MAAmB,CACzEC,QAAS,CACPX,OACAU,SACAE,GAAIC,mBAYNC,cARoBL,YAAa,2BASjCM,eAPqBN,YAAa,4BAA4B,SAAAZ,GAAM,MAAK,CACzEc,QAASd,O,iBC+FImB,MAvGf,WAAwB,IAAD,EACsBC,cAAnCC,EADa,EACbA,SAAUC,EADG,EACHA,aAAcC,EADX,EACWA,OAC1BC,EAAWC,cAEjB,OACE,uBACEC,SAAUJ,GAAa,gBAAGnB,EAAH,EAAGA,KAAMU,EAAT,EAASA,OAAT,OACrBW,EAASd,EAAQC,WAAWR,EAAMU,OAEpCc,UAAWC,IAAEC,KAJf,UAME,wBAAOC,QAAQ,WAAf,kBACQP,EAAOpB,MAAQ,gBACrB,uBACEY,GAAG,WACHY,UAAWC,IAAEG,SACbC,KAAK,OACL7B,KAAK,OACL8B,YAAY,OACZC,IAAKb,EAAS,CAAEc,UAAU,EAAMC,IAAK,EAAGC,UAAW,UAGvD,wBAAOP,QAAQ,aAAf,oBACUP,EAAOV,QAAU,gBACzB,uBACEE,GAAG,aACHY,UAAWC,IAAEU,WACbN,KAAK,MACL7B,KAAK,SACL8B,YAAY,SACZC,IAAKb,EAAS,CACZc,UAAU,EACVC,IAAK,EACLC,UAAW,GACXE,QAAS,kHAIf,wBAAQP,KAAK,SAASL,UAAWC,IAAEY,IAAnC,6B,gBClCSC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,wBAAQf,UAAWC,IAAEY,IAAKG,QAASD,EAAnC,qBCWWE,MAZf,YAAqD,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,gBAC/B,OACE,qBAAInB,UAAWC,IAAEmB,KAAjB,UACE,oBAAGpB,UAAWC,IAAEoB,KAAhB,UACE,sBAAMrB,UAAWC,IAAEzB,KAAnB,SAA0B0C,EAAK1C,OAC/B,sBAAMwB,UAAWC,IAAEqB,MAAnB,SAA2BJ,EAAKhC,YAElC,cAAC,EAAD,CAAc6B,QAASI,QCkBdI,MArBf,WACE,IAAM1B,EAAWC,cACX3B,EAAWqD,YAAYlD,GAE7B,OACEH,EAASsD,OAAS,GAChB,oBAAIzB,UAAWC,IAAEyB,KAAjB,SACGvD,EAASwD,KAAI,YAA2B,IAAxBvC,EAAuB,EAAvBA,GAAIZ,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,OACzB,OACE,cAAC,EAAD,CACEgC,KAAM,CAAE1C,OAAMU,UAEdiC,gBAAiB,kBAAMtB,EAASd,EAAQO,cAAcF,MADjDA,S,iBCOJwC,MAnBf,WACE,IAAMvD,EAASmD,YAAY7C,GACrBkB,EAAWC,cAEjB,OACE,qBAAKE,UAAW6B,IAAOC,UAAvB,SACE,0DAEE,uBACEzB,KAAK,OACLL,UAAW6B,IAAOE,MAClBC,MAAO3D,EACP4D,SAAU,SAAAC,GAAC,OAAIrC,EAASd,EAAQQ,eAAe2C,EAAEC,OAAOH,iBCYnDI,I,EAAAA,EAnBf,WACE,IAAMjE,EAAWqD,YAAY5C,GAE7B,OACE,sBAAKoB,UAAW6B,IAAOC,UAAvB,UACE,2CACA,cAAC,EAAD,IACC3D,EAASsD,OAAS,EACjB,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAatD,SAAUA,OAGzB,2E,sCChBOkE,EARS,SAAAX,GACtB,OAAOA,EAAKY,MAAK,SAACC,EAAGC,GACnB,OAAID,EAAE/D,KAAKC,cAAgB+D,EAAEhE,KAAKC,eAAuB,GACrD8D,EAAE/D,KAAKC,cAAgB+D,EAAEhE,KAAKC,cAAsB,OCH/CgE,EAAoB,SAAAC,GAC/BC,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,KCQnDM,EDL6B,WAAO,IAAD,EACvC,iBAAOF,KAAKG,MAAMN,OAAOC,aAAaM,QAAQ,oBAA9C,QAA8D,GCI9CC,GAEZC,EAAkBC,YAAcL,GAAD,mBAClCjE,EAAQC,YAAa,SAACsE,EAAOC,GAC5BC,QAAQC,IAAIH,EAAOC,GACnB,IAAMG,EAASrB,EAAgB,GAAD,mBAAKiB,GAAL,CAAYC,EAAOpE,WAEjD,OADAsD,EAAkBiB,GACXA,KAL0B,cAOlC3E,EAAQO,eAAgB,SAACgE,EAAOC,GAC/B,IAAMG,EAASJ,EAAMjF,QAAO,SAAAsF,GAAO,OAAIA,EAAQvE,KAAOmE,EAAOpE,WAE7D,OADAsD,EAAkBiB,GACXA,KAV0B,IAc/BE,EAAgBP,YAAc,GAAD,eAChCtE,EAAQQ,gBAAiB,SAAC+D,EAAOC,GAChC,OAAOA,EAAOpE,YASH0E,EALCC,YAAgB,CAC9B3F,SAAUiF,EACV/E,OAAQuF,IC5BJG,EAAU,sBAAOC,eAAP,CAA+BC,MAUhCC,EARDC,YAAe,CAC3BN,QAAS,CACP3F,UAAW2F,GAEbO,UAAUC,EACVN,eCJFO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,U,kBCb1B3G,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,0BAA0B,IAAM,4B","file":"static/js/main.32ff2850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Yz56\",\"input\":\"ContactForm_input__1JNqO\",\"formName\":\"ContactForm_formName__3dm2L ContactForm_input__1JNqO\",\"formNumber\":\"ContactForm_formNumber__2iGou ContactForm_input__1JNqO\",\"btn\":\"ContactForm_btn__3q50J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__bhVO2\",\"input\":\"Filter_input__2q3Gt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1BPND\"};","import { createSelector } from 'reselect';\n\nexport const contactsSelector = ({ phoneBook }) => phoneBook.contacts;\nexport const filterSelector = ({ phoneBook }) => phoneBook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [contactsSelector, filterSelector],\n  (contacts, filter) => {\n    if (filter) {\n      return contacts.filter(({ name }) => {\n        return name.toLowerCase().includes(filter.toLowerCase());\n      });\n    }\n    return contacts;\n  },\n);\n\nexport const getFilter = createSelector(filterSelector, filter => {\n  return filter;\n});\n\nexport const getContacts = createSelector(contactsSelector, contacts => {\n  return contacts;\n});\n","function Contacts({ children }) {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default Contacts;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uid } from 'uuid';\n\nconst addContact = createAction('phoneBook/addContact', (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uid(),\n  },\n}));\n\nconst deleteContact = createAction('phoneBook/deleteContact');\n\nconst filterContacts = createAction('phoneBook/filterContacts', filter => ({\n  payload: filter,\n}));\n\nconst actions = {\n  addContact,\n  deleteContact,\n  filterContacts,\n};\n\nexport default actions;\n","import { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(({ name, number }) =>\r\n        dispatch(actions.addContact(name, number)),\r\n      )}\r\n      className={s.form}\r\n    >\r\n      <label htmlFor=\"formName\">\r\n        Name {errors.name && ' is required.'}\r\n        <input\r\n          id=\"formName\"\r\n          className={s.formName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          ref={register({ required: true, min: 2, maxLength: 30 })}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"formNumber\">\r\n        Number {errors.number && ' is required.'}\r\n        <input\r\n          id=\"formNumber\"\r\n          className={s.formNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Number\"\r\n          ref={register({\r\n            required: true,\r\n            min: 8,\r\n            maxLength: 12,\r\n            pattern: /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/i,\r\n          })}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// function ContactForm({ onAddContact }) {\r\n//   const [name, setName] = useState('');\r\n//   const [number, setNumber] = useState('');\r\n\r\n//   const handleChange = event => {\r\n//     const { name, value } = event.target;\r\n//     switch (name) {\r\n//       case 'name':\r\n//         setName(value);\r\n//         break;\r\n//       case 'number':\r\n//         setNumber(value);\r\n//         break;\r\n//       default:\r\n//         break;\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = event => {\r\n//     event.preventDefault();\r\n//     onAddContact(name, number);\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className={s.form}>\r\n//       <label htmlFor=\"formName\">\r\n//         Name\r\n//         <input\r\n//           required\r\n//           id=\"formName\"\r\n//           className={s.formName}\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           placeholder=\"Name\"\r\n//           value={name}\r\n//           onChange={handleChange}\r\n//         />\r\n//       </label>\r\n//       <label htmlFor=\"formNumber\">\r\n//         Number\r\n//         <input\r\n//           id=\"formNumber\"\r\n//           className={s.formNumber}\r\n//           type=\"tel\"\r\n//           name=\"number\"\r\n//           placeholder=\"Number\"\r\n//           value={number}\r\n//           required\r\n//           onChange={handleChange}\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\" className={s.btn}>\r\n//         Add contact\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\nexport default ContactForm;\r\n","import s from './ContactList.module.scss';\n\nfunction DeleteButton({ handler }) {\n  return (\n    <button className={s.btn} onClick={handler}>\n      &#10008;\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","import DeleteButton from './DeleteButton';\nimport s from './ContactList.module.scss';\n\nfunction ContactListItem({ info, onDeleteHandler }) {\n  return (\n    <li className={s.item}>\n      <p className={s.wrap}>\n        <span className={s.name}>{info.name}</span>\n        <span className={s.phone}>{info.number}</span>\n      </p>\n      <DeleteButton handler={onDeleteHandler} />\n    </li>\n  );\n}\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.scss';\nimport actions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors.js';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    contacts.length > 0 && (\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem\n              info={{ name, number }}\n              key={id}\n              onDeleteHandler={() => dispatch(actions.deleteContact(id))}\n            />\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\n\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.container}>\n      <label>\n        Find Contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filter}\n          onChange={e => dispatch(actions.filterContacts(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\n\nimport styles from './App.module.css';\n\nimport { getContacts } from './redux/selectors.js';\n\nimport Contacts from './components/Contacts/Contacts';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <Contacts>\n          <Filter />\n          <ContactList contacts={contacts} />\n        </Contacts>\n      ) : (\n        <p>Your phonebook is empty at this moment</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const sortContactList = list => {\n  return list.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n    if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n    return 1;\n  });\n};\n\nexport default sortContactList;\n","export const setToLocalStorage = data => {\r\n  window.localStorage.setItem('contacts', JSON.stringify(data));\r\n};\r\n\r\nexport const getFromLocalStorage = () => {\r\n  return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\nimport sortContactList from '../services/sortContactList';\r\nimport {\r\n  setToLocalStorage,\r\n  getFromLocalStorage,\r\n} from '../services/localStorage';\r\n\r\nconst initState = getFromLocalStorage();\r\n\r\nconst contactsReducer = createReducer(initState, {\r\n  [actions.addContact]: (state, action) => {\r\n    console.log(state, action);\r\n    const result = sortContactList([...state, action.payload]);\r\n    setToLocalStorage(result);\r\n    return result;\r\n  },\r\n  [actions.deleteContact]: (state, action) => {\r\n    const result = state.filter(contact => contact.id !== action.payload);\r\n    setToLocalStorage(result);\r\n    return result;\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContacts]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nconst reducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducer from './redusers';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__QAHvC\",\"block\":\"ContactList_block__mnkzx\",\"item\":\"ContactList_item__MLQJy\",\"name\":\"ContactList_name__3gw8o\",\"phone\":\"ContactList_phone__1Pk-G\",\"wrap\":\"ContactList_wrap__1wx5a\",\"btn\":\"ContactList_btn__2Yziw\"};"],"sourceRoot":""}