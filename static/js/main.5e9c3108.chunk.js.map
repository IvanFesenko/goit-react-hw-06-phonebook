{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","redux/selectors.js","components/Contacts/Contacts.js","redux/actions.js","services/isUniqueContact.js","components/ContactForm/ContactForm.js","components/ContactList/DeleteButton.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","services/sortContactList.js","services/localStorage.js","redux/redusers.js","redux/store.js","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","contactsSelector","phoneBook","contacts","filterSelector","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","getFilter","getContacts","Contacts","children","actions","addContact","createAction","number","payload","id","uid","deleteContact","filterContacts","isUniqueContact","newName","findIndex","trim","ContactForm","useForm","register","handleSubmit","errors","dispatch","useDispatch","useSelector","onSubmit","alert","className","s","form","htmlFor","formName","type","placeholder","ref","required","min","maxLength","formNumber","pattern","btn","DeleteButton","handler","onClick","ContactListItem","info","onDeleteHandler","item","wrap","phone","ContactList","length","list","map","Filter","styles","container","input","value","onChange","e","target","App","sortContactList","sort","a","b","setToLocalStorage","data","window","localStorage","setItem","JSON","stringify","initState","parse","getItem","getFromLocalStorage","contactsReducer","createReducer","state","action","result","contact","filterReducer","reducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e9c3108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Yz56\",\"input\":\"ContactForm_input__1JNqO\",\"formName\":\"ContactForm_formName__3dm2L ContactForm_input__1JNqO\",\"formNumber\":\"ContactForm_formNumber__2iGou ContactForm_input__1JNqO\",\"btn\":\"ContactForm_btn__3q50J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__bhVO2\",\"input\":\"Filter_input__2q3Gt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1BPND\"};","import { createSelector } from 'reselect';\n\nexport const contactsSelector = ({ phoneBook }) => phoneBook.contacts;\nexport const filterSelector = ({ phoneBook }) => phoneBook.filter;\n\nexport const getVisibleContacts = createSelector(\n  [contactsSelector, filterSelector],\n  (contacts, filter) => {\n    if (filter) {\n      return contacts.filter(({ name }) => {\n        return name.toLowerCase().includes(filter.toLowerCase());\n      });\n    }\n    return contacts;\n  },\n);\n\nexport const getFilter = createSelector(filterSelector, filter => {\n  return filter;\n});\n\nexport const getContacts = createSelector(contactsSelector, contacts => {\n  return contacts;\n});\n","function Contacts({ children }) {\n  return (\n    <div>\n      <h2>Contacts</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default Contacts;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uid } from 'uuid';\n\nconst addContact = createAction('phoneBook/addContact', (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uid(),\n  },\n}));\n\nconst deleteContact = createAction('phoneBook/deleteContact');\n\nconst filterContacts = createAction('phoneBook/filterContacts', filter => ({\n  payload: filter,\n}));\n\nconst actions = {\n  addContact,\n  deleteContact,\n  filterContacts,\n};\n\nexport default actions;\n","const isUniqueContact = (contacts, newName) => {\n  const index = contacts.findIndex(\n    ({ name }) => name.toLowerCase() === newName.toLowerCase().trim(),\n  );\n  return index === -1 ? true : false;\n};\n\nexport default isUniqueContact;\n","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\nimport isUniqueContact from '../../services/isUniqueContact';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const onSubmit = ({ name, number }) => {\n    if (isUniqueContact(contacts, name)) {\n      dispatch(actions.addContact(name, number));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n      <label htmlFor=\"formName\">\n        Name {errors.name && ' is required.'}\n        <input\n          id=\"formName\"\n          className={s.formName}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          ref={register({ required: true, min: 2, maxLength: 30 })}\n        />\n      </label>\n      <label htmlFor=\"formNumber\">\n        Number {errors.number && ' is required.'}\n        <input\n          id=\"formNumber\"\n          className={s.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          ref={register({\n            required: true,\n            min: 8,\n            maxLength: 12,\n            pattern: /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/i,\n          })}\n        />\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// function ContactForm({ onAddContact }) {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const handleChange = event => {\n//     const { name, value } = event.target;\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n//       case 'number':\n//         setNumber(value);\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     onAddContact(name, number);\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className={s.form}>\n//       <label htmlFor=\"formName\">\n//         Name\n//         <input\n//           required\n//           id=\"formName\"\n//           className={s.formName}\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={handleChange}\n//         />\n//       </label>\n//       <label htmlFor=\"formNumber\">\n//         Number\n//         <input\n//           id=\"formNumber\"\n//           className={s.formNumber}\n//           type=\"tel\"\n//           name=\"number\"\n//           placeholder=\"Number\"\n//           value={number}\n//           required\n//           onChange={handleChange}\n//         />\n//       </label>\n//       <button type=\"submit\" className={s.btn}>\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// }\n\nexport default ContactForm;\n","import s from './ContactList.module.scss';\n\nfunction DeleteButton({ handler }) {\n  return (\n    <button className={s.btn} onClick={handler}>\n      &#10008;\n    </button>\n  );\n}\n\nexport default DeleteButton;\n","import DeleteButton from './DeleteButton';\nimport s from './ContactList.module.scss';\n\nfunction ContactListItem({ info, onDeleteHandler }) {\n  return (\n    <li className={s.item}>\n      <p className={s.wrap}>\n        <span className={s.name}>{info.name}</span>\n        <span className={s.phone}>{info.number}</span>\n      </p>\n      <DeleteButton handler={onDeleteHandler} />\n    </li>\n  );\n}\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.scss';\nimport actions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors.js';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    contacts.length > 0 && (\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem\n              info={{ name, number }}\n              key={id}\n              onDeleteHandler={() => dispatch(actions.deleteContact(id))}\n            />\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\n\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.container}>\n      <label>\n        Find Contacts by name\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={filter}\n          onChange={e => dispatch(actions.filterContacts(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\n\nimport styles from './App.module.css';\n\nimport { getContacts } from './redux/selectors.js';\n\nimport Contacts from './components/Contacts/Contacts';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <Contacts>\n          <Filter />\n          <ContactList contacts={contacts} />\n        </Contacts>\n      ) : (\n        <p>Your phonebook is empty at this moment</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const sortContactList = list => {\n  return list.sort((a, b) => {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n    if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n    return 1;\n  });\n};\n\nexport default sortContactList;\n","export const setToLocalStorage = data => {\r\n  window.localStorage.setItem('contacts', JSON.stringify(data));\r\n};\r\n\r\nexport const getFromLocalStorage = () => {\r\n  return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n};\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\nimport sortContactList from '../services/sortContactList';\nimport {\n  setToLocalStorage,\n  getFromLocalStorage,\n} from '../services/localStorage';\n\nconst initState = getFromLocalStorage();\n\nconst contactsReducer = createReducer(initState, {\n  [actions.addContact]: (state, action) => {\n    const result = sortContactList([...state, action.payload]);\n    setToLocalStorage(result);\n    return result;\n  },\n  [actions.deleteContact]: (state, action) => {\n    const result = state.filter(contact => contact.id !== action.payload);\n    setToLocalStorage(result);\n    return result;\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContacts]: (state, action) => {\n    return action.payload;\n  },\n});\n\nconst reducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nexport default reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport reducer from './redusers';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__QAHvC\",\"block\":\"ContactList_block__mnkzx\",\"item\":\"ContactList_item__MLQJy\",\"name\":\"ContactList_name__3gw8o\",\"phone\":\"ContactList_phone__1Pk-G\",\"wrap\":\"ContactList_wrap__1wx5a\",\"btn\":\"ContactList_btn__2Yziw\"};"],"sourceRoot":""}